{"version":3,"sources":["authProvider.js","Components/Avis.js","Components/Produit.js","Components/Messages.js","Components/Users.js","Components/Lieux.js","Components/Evenement.js","App.js","serviceWorker.js","index.js"],"names":["login","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","decodedToken","decodeJwt","localStorage","setItem","role","logout","removeItem","Promise","resolve","checkError","error","checkAuth","getItem","reject","getPermissions","AvisFilter","props","Filter","SearchInput","source","alwaysOn","AvisList","List","filters","filterDefaultValues","is_published","Datagrid","rowClick","TextField","DateField","ShowButton","EditButton","DeleteButton","AvisCreate","Create","SimpleForm","NumberInput","DateInput","AvisEditActions","basePath","data","resource","TopToolbar","record","AvisEdit","Edit","actions","TextInput","AvisShow","Show","SimpleShowLayout","ProduitFilter","ProduitList","ProduitCreate","multiline","ProduitEditActions","ProduitEdit","ProduitShow","MessagesFilter","MessagesList","MessagesCreate","MessagesEditActions","MessagesEdit","MessagesShow","UsersFilter","UsersList","UsersShow","LieuxFilter","LieuxList","LieuxCreate","LieuxEditActions","LieuxEdit","LieuxShow","EventFilter","EventList","EventCreate","EventEditActions","EventEdit","EventShow","i18nProvider","polyglotI18nProvider","frenchMessages","dataProvider","simpleRestProvider","url","options","Accept","set","fetchUtils","fetchJson","theme","createMuiTheme","palette","primary","blue","secondary","pink","App","Admin","title","locale","authProvider","permissions","Resource","name","icon","LocalMallIcon","list","create","show","edit","label","PlaceIcon","MessageIcon","FeedbackIcon","PersonIcon","EventIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5f6cf573.chunk.js","sourcesContent":["import decodeJwt from \"jwt-decode\";\r\n\r\nexport default {\r\n  login: ({ username, password }) => {\r\n    const request = new Request(\r\n      \"http://localhost:56407/api/Users/authenticate\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ username, password }),\r\n        headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n      }\r\n    );\r\n    return fetch(request)\r\n      .then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(({ token }) => {\r\n        const decodedToken = decodeJwt(token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"permissions\", decodedToken.role);\r\n      });\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"permissions\");\r\n    return Promise.resolve();\r\n  },\r\n  checkError: (error) => {\r\n    // ...\r\n  },\r\n  checkAuth: () => {\r\n    return localStorage.getItem(\"token\") ? Promise.resolve() : Promise.reject();\r\n  },\r\n  getPermissions: () => {\r\n    const role = localStorage.getItem(\"permissions\");\r\n    return role ? Promise.resolve(role) : Promise.reject();\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  List, Datagrid, TextField, SearchInput, TextInput, Filter, Create, SimpleForm, Edit, \r\n  DateField, DateInput, Show, SimpleShowLayout, EditButton, TopToolbar, Button, ShowButton,\r\n  NumberInput, DeleteButton\r\n} from \"react-admin\";\r\n\r\nconst AvisFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const AvisList = (props) => (\r\n  <List\r\n    {...props}\r\n    filters={<AvisFilter />}\r\n    filterDefaultValues={{ is_published: true }}\r\n  >\r\n    <Datagrid rowClick=\"show\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"note\" />\r\n      <DateField source=\"creationDate\" />\r\n      <ShowButton />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const AvisCreate = (props) => (\r\n      <Create {...props}>\r\n        <SimpleForm>\r\n          <NumberInput source=\"note\" />\r\n          <DateInput source=\"creationDate\" />\r\n        </SimpleForm>\r\n      </Create>\r\n);\r\n\r\nconst AvisEditActions = ({ basePath, data, resource }) => (\r\n  <TopToolbar>\r\n    <ShowButton basePath={basePath} record={data} />\r\n  </TopToolbar>\r\n);\r\n\r\n\r\nexport const AvisEdit = (props) => (\r\n  <Edit actions={<AvisEditActions />} {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"note\" />\r\n      <DateInput source=\"creationDate\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nconst AvisShowActions = ({ basePath, data, resource }) => (\r\n  <TopToolbar>\r\n    <EditButton basePath={basePath} record={data} />\r\n    <Button color=\"primary\">\r\n      Custom Action\r\n    </Button>\r\n  </TopToolbar>\r\n);\r\n\r\nexport const AvisShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"note\" />\r\n      <DateField source=\"creationDate\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);","import React from \"react\";\r\nimport {\r\n  List, Datagrid, TextField, SearchInput, TextInput, Filter, Create, SimpleForm, Edit, \r\n  Show, SimpleShowLayout, EditButton, TopToolbar, ShowButton, NumberInput, DeleteButton,\r\n} from \"react-admin\";\r\n\r\nconst ProduitFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const ProduitList = (props) => (\r\n  <List\r\n    {...props}\r\n    filters={<ProduitFilter />}\r\n    filterDefaultValues={{ is_published: true }}\r\n  >\r\n    <Datagrid rowClick=\"show\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"prix\" />\r\n          <ShowButton />\r\n          <EditButton />\r\n          <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ProduitCreate = (props) => (\r\n         <Create {...props}>\r\n           <SimpleForm>\r\n             <TextInput source=\"name\" />\r\n             <NumberInput source=\"prix\" />\r\n             <TextInput multiline source=\"description\" />\r\n           </SimpleForm>\r\n         </Create>\r\n       );\r\n\r\nconst ProduitEditActions = ({ basePath, data, resource }) => (\r\n  <TopToolbar>\r\n    <ShowButton basePath={basePath} record={data} />\r\n  </TopToolbar>\r\n);\r\n\r\nexport const ProduitEdit = (props) => (\r\n  <Edit actions={<ProduitEditActions />} {...props}>\r\n    <SimpleForm>\r\n        <TextInput source=\"name\" />\r\n        <NumberInput source=\"prix\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const ProduitShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"name\" />\r\n          <TextField source=\"prix\" />\r\n          <TextField source=\"description\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);","import React from \"react\";\r\nimport {\r\n  List, Datagrid, TextField, SearchInput, TextInput, Filter, Create, SimpleForm, Edit, \r\n  Show, SimpleShowLayout, EditButton, TopToolbar, ShowButton, DeleteButton,\r\n  DateField,\r\n} from \"react-admin\";\r\n\r\nconst MessagesFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const MessagesList = (props) => (\r\n  <List\r\n    {...props}\r\n    filters={<MessagesFilter />}\r\n    filterDefaultValues={{ is_published: true }}\r\n  >\r\n    <Datagrid rowClick=\"show\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"subject\" />\r\n          <DateField source=\"creationDate\" />\r\n          <ShowButton />\r\n          <EditButton />\r\n          <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const MessagesCreate = (props) => (\r\n         <Create {...props}>\r\n           <SimpleForm>\r\n             <TextInput source=\"subject\" />\r\n             <TextInput multiline source=\"body\" />\r\n           </SimpleForm>\r\n         </Create>\r\n       );\r\n\r\nconst MessagesEditActions = ({ basePath, data, resource }) => (\r\n  <TopToolbar>\r\n    <ShowButton basePath={basePath} record={data} />\r\n  </TopToolbar>\r\n);\r\n\r\nexport const MessagesEdit = (props) => (\r\n  <Edit actions={<MessagesEditActions />} {...props}>\r\n    <SimpleForm>\r\n        <TextInput source=\"subject\" />\r\n        <TextInput multiline source=\"body\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const MessagesShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"subject\" />\r\n          <TextField source=\"body\" />\r\n          <DateField source=\"creationDate\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);","import React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  SearchInput,\r\n  Filter,\r\n  Show,\r\n  SimpleShowLayout,\r\n  EditButton,\r\n  ShowButton,\r\n  DeleteButton,\r\n} from \"react-admin\";\r\n\r\nconst UsersFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const UsersList = (props) => (\r\n  <List\r\n    {...props}\r\n    filters={<UsersFilter />}\r\n    filterDefaultValues={{ is_published: true }}\r\n  >\r\n    <Datagrid rowClick=\"show\">\r\n      <TextField source=\"userId\" />\r\n      <TextField source=\"firstName\" />\r\n      <TextField source=\"lastName\" />\r\n      <TextField source=\"userName\" />\r\n      <TextField source=\"role\" />\r\n      <ShowButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const UsersShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"userId\" />\r\n      <TextField source=\"firstName\" />\r\n      <TextField source=\"lastName\" />\r\n      <TextField source=\"userName\" />\r\n      <TextField source=\"role\" />\r\n      <TextField source=\"email\" />\r\n      <TextField source=\"password\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n    List, Datagrid, TextField, SearchInput, TextInput, Filter, Create, SimpleForm, Edit,\r\n    Show, SimpleShowLayout, EditButton, TopToolbar, Button, ShowButton,\r\n    NumberInput, DeleteButton\r\n} from \"react-admin\";\r\n\r\nconst LieuxFilter = (props) => (\r\n    <Filter {...props}>\r\n        <SearchInput source=\"q\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nexport const LieuxList = (props) => (\r\n    <List\r\n        {...props}\r\n        filters={<LieuxFilter />}\r\n        filterDefaultValues={{ is_published: true }}\r\n    >\r\n        <Datagrid rowClick=\"show\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            <TextField source=\"ville\" />\r\n            <TextField source=\"capacite\" />\r\n            <TextField source=\"prix\" />\r\n            <ShowButton />\r\n            <EditButton />\r\n            <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const LieuxCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"ville\" />\r\n            <NumberInput source=\"capacite\" />\r\n            <NumberInput source=\"prix\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nconst LieuxEditActions = ({ basePath, data, resource }) => (\r\n    <TopToolbar>\r\n        <ShowButton basePath={basePath} record={data} />\r\n    </TopToolbar>\r\n);\r\n\r\n\r\nexport const LieuxEdit = (props) => (\r\n    <Edit actions={<LieuxEditActions />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"ville\" />\r\n            <NumberInput source=\"capacite\" />\r\n            <NumberInput source=\"prix\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nconst LieuxShowActions = ({ basePath, data, resource }) => (\r\n    <TopToolbar>\r\n        <EditButton basePath={basePath} record={data} />\r\n        <Button color=\"primary\">\r\n            Custom Action\r\n    </Button>\r\n    </TopToolbar>\r\n);\r\n\r\nexport const LieuxShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            <TextField source=\"ville\" />\r\n            <TextField source=\"capacite\" />\r\n            <TextField source=\"prix\" />\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from \"react\";\r\nimport {\r\n    List, Datagrid, TextField, SearchInput, TextInput, Filter, Create, SimpleForm, Edit,\r\n    Show, SimpleShowLayout, EditButton, TopToolbar, Button, ShowButton,\r\n    DeleteButton\r\n} from \"react-admin\";\r\n\r\nconst EventFilter = (props) => (\r\n    <Filter {...props}>\r\n        <SearchInput source=\"q\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nexport const EventList = (props) => (\r\n    <List\r\n        {...props}\r\n        filters={<EventFilter />}\r\n        filterDefaultValues={{ is_published: true }}\r\n    >\r\n        <Datagrid rowClick=\"show\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"type\" />\r\n            <TextField source=\"theme\" />\r\n            <TextField source=\"status\" />\r\n            <TextField source=\"startDate\" />\r\n            <TextField source=\"endDate\" />\r\n            <ShowButton />\r\n            <EditButton />\r\n            <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const EventCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"type\" />\r\n            <TextInput source=\"theme\" />\r\n            <TextInput source=\"status\" />\r\n            <TextInput source=\"startDate\" />\r\n            <TextInput source=\"endDate\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nconst EventEditActions = ({ basePath, data, resource }) => (\r\n    <TopToolbar>\r\n        <ShowButton basePath={basePath} record={data} />\r\n    </TopToolbar>\r\n);\r\n\r\n\r\nexport const EventEdit = (props) => (\r\n    <Edit actions={<EventEditActions />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"type\" />\r\n            <TextInput source=\"theme\" />\r\n            <TextInput source=\"status\" />\r\n            <TextInput source=\"startDate\" />\r\n            <TextInput source=\"endDate\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nconst EventShowActions = ({ basePath, data, resource }) => (\r\n    <TopToolbar>\r\n        <EditButton basePath={basePath} record={data} />\r\n        <Button color=\"primary\">\r\n            Custom Action\r\n    </Button>\r\n    </TopToolbar>\r\n);\r\n\r\nexport const EventShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"type\" />\r\n            <TextField source=\"theme\" />\r\n            <TextField source=\"status\" />\r\n            <TextField source=\"description\" />\r\n            <TextField source=\"startDate\" />\r\n            <TextField source=\"endDate\" />\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import * as React from \"react\";\nimport { fetchUtils, Admin, Resource } from \"react-admin\";\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\nimport { AvisList, AvisCreate, AvisShow, AvisEdit } from \"./Components/Avis\";\nimport { ProduitList, ProduitCreate, ProduitShow, ProduitEdit } from \"./Components/Produit\";\nimport { MessagesList, MessagesCreate, MessagesShow, MessagesEdit } from \"./Components/Messages\";\nimport { UsersList, UsersShow } from \"./Components/Users\";\nimport frenchMessages from \"ra-language-french\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport EventIcon from '@material-ui/icons/Event';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\nimport { LieuxList, LieuxCreate, LieuxShow, LieuxEdit } from \"./Components/Lieux\";\nimport { EventList, EventCreate, EventShow, EventEdit } from \"./Components/Evenement\";\n\nconst i18nProvider = polyglotI18nProvider(() => frenchMessages, \"fr\");\n\nconst fetchJson = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n  const token = localStorage.getItem(\"token\");\n  options.headers.set(\"Authorization\", `Bearer  ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\nconst dataProvider = simpleRestProvider(\"http://localhost:56407/api\", fetchJson);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  }, // Switching the dark mode on is a single property value change.\n});\n\n\nconst App = () => (\n  <Admin title=\"Clic'n Fest Admin\" locale=\"fr\" i18nProvider={i18nProvider} dataProvider={dataProvider} \n     authProvider={authProvider} theme={theme}>\n    {permissions => [\n      <Resource name=\"Produit\" icon={LocalMallIcon} list={ProduitList} create={ProduitCreate} show={ProduitShow} edit={ProduitEdit} />,\n      <Resource options={{ label: 'Lieux' , title: 'Lieux' }} name=\"Lieux\" icon={PlaceIcon} \n      list={LieuxList} create={LieuxCreate} show={LieuxShow} edit={LieuxEdit} />,\n      <Resource name=\"Messages\" icon={MessageIcon} list={MessagesList} create={MessagesCreate} show={MessagesShow} edit={MessagesEdit} />,\n      <Resource name=\"Avis\" icon={FeedbackIcon} list={AvisList} create={AvisCreate} show={AvisShow} edit={AvisEdit} />,\n        permissions === 'Admin'\n        ? <Resource name=\"Users\" icon={PersonIcon} list={UsersList} show={UsersShow} />\n        : null,\n        permissions === 'Admin'\n        ? <Resource name=\"Evenements\" icon={EventIcon} list={EventList} create={EventCreate}\n        show={EventShow} edit={EventEdit} /> : null,\n    ]}\n  </Admin>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}